import{s as F,f as _,a as S,g as k,h as H,d as b,c as R,u as Y,j as A,i as x,y as D,L as N,z as X,M as G,p as U,q as I,e as O,R as J}from"../chunks/scheduler.34360529.js";import{S as q,i as z,b as j,d as E,m as W,a as L,t as C,e as P,f as K,c as Q,g as Z}from"../chunks/index.9ac5b350.js";import{V as u,c as v,P as ee,d as te,a as V,S as ne}from"../chunks/PhysicObject.79f6f347.js";import{W as se}from"../chunks/World.ed9f41e2.js";const oe=(f,t)=>{const o=[],r=f.x,i=f.y,l=3,c=5,m=.3,d=4,e=.5,n=.1,p=3,a=Math.random()*(r-c),h=i-p-Math.random()*(i-d-p),y=Math.random()*c+l,w=Math.random()*d+m,s=Math.random()*e+n;ae({x:a,y:h,w:y,h:w,topRatio:s},t).forEach(T=>o.push(T)),ie(f).forEach(T=>o.push(T));const g=Math.floor(1+Math.random()*2),M=g*.1,$=re(new u(Math.random()*r,Math.random()*i),{m:g,r:M});for(;$.position.x>a&&$.position.x<a+y&&$.position.y<h&&$.position.y>h+w;)$.position.x=Math.random()*r,$.position.y=Math.random()*i;return o.push($),{objects:o,sphere:$}},re=(f,t)=>v({geometry:{type:"sphere",r:(t==null?void 0:t.r)||.1},mass:t==null?void 0:t.m,position:f,velocity:new u(0,0)}),ie=f=>{const t=f.x,o=f.y,r=[],i=v({geometry:{type:"line",vector:new u(t,0)},position:new u(0,0),fixed:!0});r.push(i);const l=v({geometry:{type:"line",vector:new u(0,o*10)},position:new u(0,0),fixed:!0});r.push(l);const c=v({geometry:{type:"line",vector:new u(0,o*10)},position:new u(15,0),fixed:!0});return r.push(c),r},ae=(f,t)=>{const{x:o,y:r,h:i,w:l,topRatio:c}=f;if(c<0||c>1)throw new Error("topRatio must be between 0 and 1");const m=l*c/2,d=l*(1-c),e=.1,n=[],p=v({geometry:{type:"line",vector:new u(m,0)},position:new u(o,r+e),fixed:!0});n.push(p);const a=v({geometry:{type:"line",vector:new u(0,-i)},position:new u(o+m,r),fixed:!0});n.push(a);const h=v({geometry:{type:"line",vector:new u(d,0)},position:new u(o+m,r-i-e),fixed:!0});n.push(h);const y=v({geometry:{type:"line",vector:new u(d-2*e,0)},position:new u(o+m+e,r-i+e),fixed:!0,friction:1,restitution:0,collisionListener:t});n.push(y);const w=v({geometry:{type:"line",vector:new u(0,i)},position:new u(o+m+d,r-i),fixed:!0});n.push(w);const s=v({geometry:{type:"line",vector:new u(m,0)},position:new u(o+m+d,r+e),fixed:!0});return n.push(s),n};function ce(f){let t,o,r,i,l,c="Reset",m,d,e;return o=new ee({props:{sketch:f[1]}}),{c(){t=_("div"),j(o.$$.fragment),r=S(),i=_("div"),l=_("button"),l.textContent=c,this.h()},l(n){t=k(n,"DIV",{class:!0});var p=H(t);E(o.$$.fragment,p),p.forEach(b),r=R(n),i=k(n,"DIV",{});var a=H(i);l=k(a,"BUTTON",{"data-svelte-h":!0}),Y(l)!=="svelte-tlxueg"&&(l.textContent=c),a.forEach(b),this.h()},h(){A(t,"class","d-flex justify-content-center")},m(n,p){x(n,t,p),W(o,t,null),x(n,r,p),x(n,i,p),D(i,l),m=!0,d||(e=N(l,"click",f[0]),d=!0)},p:X,i(n){m||(L(o.$$.fragment,n),m=!0)},o(n){C(o.$$.fragment,n),m=!1},d(n){n&&(b(t),b(r),b(i)),P(o),d=!1,e()}}}const B=60;function le(f){console.clear();let t,o,r;const i=()=>{setTimeout(l,1e3)},l=()=>{t=new se({dimensions:new u(15,15),reporter:()=>{},enableGravity:!0});const e=oe(t.dimensions,i);e.sphere.fixed=!0,o=e.sphere,r=o.position.clone();for(const n of e.objects)t.addObject(n)},c=e=>typeof e=="number"?e*B:e.clone().multiplyScalar(B);let m;const d=e=>{e.setup=()=>{m=e,l();const a=c(t.dimensions);e.createCanvas(a.x,a.y),e.background(0),e.fill(255),e.stroke(255),l()},e.draw=()=>{e.background(0),t.step(),te(e,t),p(e)};let n;e.mousePressed=()=>{V(e)&&(n=new u(e.width,e.height).divideScalar(2),o.position.copy(r),o.velocity.zero(),o.fixed=!0)},e.mouseReleased=()=>{if(!V(e)||!n)return;const a=n,y=new u(e.mouseX,e.mouseY).clone().subtract(a).multiplyScalar(20);y.x*=-1,t.applyForce(o,y),o.fixed=!1,n=void 0};const p=a=>{if(!o.fixed||!n)return;a.stroke("red"),a.strokeWeight(1),a.noFill(),a.circle(n.x,n.y,15),a.stroke("blue"),a.strokeWeight(2);const h=n,w=new u(a.mouseX,a.mouseY).clone().subtract(h);a.line(h.x,h.y,h.x+w.x,h.y+w.y);const s=c(o.position);w.x*=-1,w.y*=-1,a.line(s.x,a.height-s.y,s.x+w.x,a.height-s.y+w.y)}};return G(()=>{m==null||m.remove()}),[l,d]}class ue extends q{constructor(t){super(),z(this,t,le,ce,F,{})}}function fe(f){let t,o="<span>A list of games implemented using the engine.</span>",r,i,l,c,m,d,e,n,p;function a(s){f[2](s)}let h={items:f[1],showChevron:!0};f[0]!==void 0&&(h.value=f[0]),c=new ne({props:h}),U.push(()=>K(c,"value",a));var y=f[0].value;function w(s,g){return{}}return y&&(e=I(y,w())),{c(){t=_("div"),t.innerHTML=o,r=S(),i=_("br"),l=S(),j(c.$$.fragment),d=S(),e&&j(e.$$.fragment),n=O()},l(s){t=k(s,"DIV",{"data-svelte-h":!0}),Y(t)!=="svelte-1is62ld"&&(t.innerHTML=o),r=R(s),i=k(s,"BR",{}),l=R(s),E(c.$$.fragment,s),d=R(s),e&&E(e.$$.fragment,s),n=O()},m(s,g){x(s,t,g),x(s,r,g),x(s,i,g),x(s,l,g),W(c,s,g),x(s,d,g),e&&W(e,s,g),x(s,n,g),p=!0},p(s,[g]){const M={};if(!m&&g&1&&(m=!0,M.value=s[0],J(()=>m=!1)),c.$set(M),g&1&&y!==(y=s[0].value)){if(e){Z();const $=e;C($.$$.fragment,1,0,()=>{P($,1)}),Q()}y?(e=I(y,w()),j(e.$$.fragment),L(e.$$.fragment,1),W(e,n.parentNode,n)):e=null}},i(s){p||(L(c.$$.fragment,s),e&&L(e.$$.fragment,s),p=!0)},o(s){C(c.$$.fragment,s),e&&C(e.$$.fragment,s),p=!1},d(s){s&&(b(t),b(r),b(i),b(l),b(d),b(n)),P(c,s),e&&P(e,s)}}}function me(f,t,o){const r=[{label:"Bucket",value:ue}];let i=r[0];function l(c){i=c,o(0,i)}return[i,r,l]}class ge extends q{constructor(t){super(),z(this,t,me,fe,F,{})}}export{ge as component};
